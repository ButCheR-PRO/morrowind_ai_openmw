local core = require('openmw.core')
local async = require('openmw.async')

local M = {}

local function sendHttpRequest(url, data)
    local success, result = pcall(function()
        print("[AI] HTTP –∑–∞–ø—Ä–æ—Å –∫: " .. url)
        print("[AI] –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã")
        
        -- –í OpenMW 0.49 HTTP –¥–µ–ª–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–µ –≤—ã–∑–æ–≤—ã
        return "–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò —Å–µ—Ä–≤–µ—Ä–∞"
    end)
    
    return success and result or "–û—à–∏–±–∫–∞ HTTP –∑–∞–ø—Ä–æ—Å–∞"
end

function M.onInit()
    print("[Morrowind AI] ü§ñ –ò–ò –º–æ–¥ –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    
    -- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ UI Manager
    core.sendGlobalEvent("ai_show_message", {
        message = "[AI] üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ HTTP —Å–µ—Ä–≤–µ—Ä—É..."
    })
    
    -- –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ HTTP –º–æ—Å—Ç—É
    local response = sendHttpRequest("http://127.0.0.1:8080/test", {
        type = "connection_test",
        timestamp = os.time()
    })
    
    -- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —á–µ—Ä–µ–∑ UI Manager
    core.sendGlobalEvent("ai_connection_test", {
        response = response
    })
end

function M.onUpdate(dt)
    -- –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º
end

-- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
function M.onGlobalEvent(eventName, data)
    if eventName == "ai_dialogue_request" then
        local npcName = data.npc_name or "Unknown"
        local message = data.message or ""
        
        print("[AI] üó£Ô∏è –î–∏–∞–ª–æ–≥: " .. npcName .. " <- " .. message)
        
        local response = sendHttpRequest("http://127.0.0.1:8080/dialogue", {
            npc_name = npcName,
            player_message = message
        })
        
        -- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —á–µ—Ä–µ–∑ UI Manager
        core.sendGlobalEvent("ai_dialogue_response", {
            npc_name = npcName,
            ai_response = response
        })
        
    elseif eventName == "ai_voice_start" then
        print("[AI] üé§ –ù–∞—á–∞–ª–æ –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–∞")
        
        -- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ UI Manager
        core.sendGlobalEvent("ai_voice_start", {
            timestamp = os.time()
        })
        
        -- –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã —Å –≤–Ω–µ—à–Ω–∏–º HTTP —Å–µ—Ä–≤–µ—Ä–æ–º –¥–ª—è –≥–æ–ª–æ—Å–∞
        local voiceResponse = sendHttpRequest("http://127.0.0.1:8080/voice/start", {
            action = "start_recording"
        })
        
    elseif eventName == "ai_voice_stop" then
        print("[AI] üé§ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–∞")
        
        core.sendGlobalEvent("ai_voice_stop", {
            timestamp = os.time()
        })
        
        local voiceResponse = sendHttpRequest("http://127.0.0.1:8080/voice/stop", {
            action = "stop_recording"
        })
    end
end

return {
    eventHandlers = {
        onInit = M.onInit,
        onUpdate = M.onUpdate,
        onGlobalEvent = M.onGlobalEvent
    }
}
