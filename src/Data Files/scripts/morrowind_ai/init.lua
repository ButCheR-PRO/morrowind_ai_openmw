local core = require('openmw.core')

-- –ó–∞–≥–ª—É—à–∫–∞ HTTP –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è OpenMW
local function sendHttpRequest(url, data)
    print("[AI] üì° HTTP –∑–∞–ø—Ä–æ—Å –∫: " .. url)
    print("[AI] üì§ –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã")
    
    -- –í OpenMW –ø—Ä—è–º—ã—Ö HTTP –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–µ—Ç, –Ω–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–Ω–µ—à–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
    -- –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É
    return "‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò —Å–µ—Ä–≤–µ—Ä–∞"
end

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –º–æ–¥—É–ª—è
local function onInit()
    print("[Morrowind AI] ü§ñ –ò–ò –º–æ–¥ –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    print("[Morrowind AI] üåê –ì–ª–æ–±–∞–ª—å–Ω—ã–π –º–æ–¥—É–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    -- –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ HTTP –º–æ—Å—Ç—É
    local response = sendHttpRequest("http://127.0.0.1:8080/test", {
        type = "connection_test",
        timestamp = os.time()
    })
    
    print("[AI] üì® –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: " .. response)
end

-- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
local function onGlobalEvent(eventName, data)
    print("[AI] üì¢ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ: " .. eventName)
    
    if eventName == "ai_dialogue_request" then
        local npcName = data.npc_name or "Unknown"
        local message = data.message or ""
        
        print("[AI] üó£Ô∏è –î–∏–∞–ª–æ–≥: " .. npcName .. " <- " .. message)
        
        -- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ HTTP –º–æ—Å—Ç—É
        local response = sendHttpRequest("http://127.0.0.1:8080/dialogue", {
            npc_name = npcName,
            player_message = message,
            context = data.context or {}
        })
        
        -- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ
        core.sendGlobalEvent("ai_dialogue_response", {
            npc_name = npcName,
            ai_response = response,
            original_message = message
        })
        
    elseif eventName == "ai_voice_start" then
        print("[AI] üé§ üî¥ –ù–∞—á–∞–ª–æ –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–∞")
        
        -- HTTP –∑–∞–ø—Ä–æ—Å –¥–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–∞
        local voiceResponse = sendHttpRequest("http://127.0.0.1:8080/voice", {
            action = "start_recording",
            timestamp = data.timestamp or os.time()
        })
        
        print("[AI] üé§ –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç: " .. voiceResponse)
        
    elseif eventName == "ai_voice_stop" then
        print("[AI] üé§ ‚ö™ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–∞")
        
        -- HTTP –∑–∞–ø—Ä–æ—Å –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–ø–∏—Å–∏
        local voiceResponse = sendHttpRequest("http://127.0.0.1:8080/voice", {
            action = "stop_recording",
            voice_text = "–¢–µ—Å—Ç–æ–≤—ã–π —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç",
            timestamp = data.timestamp or os.time()
        })
        
        print("[AI] üé§ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: " .. voiceResponse)
        
        -- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –æ–±—Ä–∞—Ç–Ω–æ
        core.sendGlobalEvent("ai_voice_recognized", {
            text = "–¢–µ—Å—Ç–æ–≤—ã–π —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç",
            timestamp = os.time()
        })
        
    elseif eventName == "ai_connection_test" then
        print("[AI] üîó –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –æ—Ç: " .. (data.source or "unknown"))
        
        -- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º ping –∫ HTTP –º–æ—Å—Ç—É
        local pingResponse = sendHttpRequest("http://127.0.0.1:8080/health", {
            ping = true,
            source = data.source,
            timestamp = os.time()
        })
        
        print("[AI] üèì Ping –æ—Ç–≤–µ—Ç: " .. pingResponse)
        
    elseif eventName == "ai_http_test" then
        print("[AI] üåê HTTP —Ç–µ—Å—Ç –∫: " .. (data.url or "unknown"))
        
        local testResponse = sendHttpRequest(data.url or "http://127.0.0.1:8080/test", {
            test = true,
            timestamp = data.timestamp or os.time()
        })
        
        print("[AI] üì° HTTP —Ç–µ—Å—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç: " .. testResponse)
    end
end

-- –≠–∫—Å–ø–æ—Ä—Ç —Ç–æ–ª—å–∫–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —Å–µ–∫—Ü–∏–π
return {
    eventHandlers = {
        onInit = onInit,
        onGlobalEvent = onGlobalEvent
    }
}
