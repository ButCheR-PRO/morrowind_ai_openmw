-- OpenMW AI Mod - –ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å AI-—Å–µ—Ä–≤–µ—Ä–æ–º
-- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ event bus –Ω–∞ –ø–æ—Ä—Ç—É 9090

print("[AI] üöÄ –ü–û–õ–ù–û–¶–ï–ù–ù–´–ô AI –ú–û–î –ó–ê–ì–†–£–ñ–ê–ï–¢–°–Ø!")

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
local AI_EVENT_BUS_HOST = "127.0.0.1"
local AI_EVENT_BUS_PORT = 9090
local HTTP_BRIDGE_URL = "http://127.0.0.1:8080"

-- –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
local aiConnected = false
local aiActive = false

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥—É–ª–∏ OpenMW
local util_ok, util = pcall(require, 'openmw.util')
local core_ok, core = pcall(require, 'openmw.core')

print("[AI] üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥—É–ª–∏ OpenMW:")
print("[AI]   openmw.util:", util_ok)
print("[AI]   openmw.core:", core_ok)

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ AI-—Å–µ—Ä–≤–µ—Ä—É (–∑–∞–≥–ª—É—à–∫–∞)
local function connectToAIServer()
    print("[AI] üîó –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ AI event bus...")
    print("[AI] üì° –•–æ—Å—Ç: " .. AI_EVENT_BUS_HOST .. ":" .. AI_EVENT_BUS_PORT)
    
    -- TODO: –†–µ–∞–ª—å–Ω–æ–µ TCP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ event bus
    -- –ü–æ–∫–∞ –∏–º–∏—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    aiConnected = true
    
    print("[AI] ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ AI-—Å–µ—Ä–≤–µ—Ä—É —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
    return true
end

-- –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è –≤ AI
local function sendEventToAI(eventType, data)
    if not aiConnected then
        print("[AI] ‚ö†Ô∏è –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ AI-—Å–µ—Ä–≤–µ—Ä—É")
        return nil
    end
    
    print("[AI] üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é —Å–æ–±—ã—Ç–∏–µ –≤ AI: " .. eventType)
    print("[AI] üìã –î–∞–Ω–Ω—ã–µ: " .. tostring(data))
    
    -- TODO: –†–µ–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ TCP socket
    -- –ü–æ–∫–∞ –∏–º–∏—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –æ—Ç Gemini
    local aiResponse = "Gemini AI –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ —Å–æ–±—ã—Ç–∏–µ '" .. eventType .. "' —Å –¥–∞–Ω–Ω—ã–º–∏: " .. tostring(data)
    
    print("[AI] üì• –û—Ç–≤–µ—Ç –æ—Ç AI: " .. aiResponse)
    return aiResponse
end

-- –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∏–∞–ª–æ–≥–æ–≤
local function processDialogue(playerText, npcName)
    print("[AI] üí¨ –û–ë–†–ê–ë–ê–¢–´–í–ê–Æ –î–ò–ê–õ–û–ì!")
    print("[AI] üë§ –ù–ü–°: " .. (npcName or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"))
    print("[AI] üó®Ô∏è –ò–≥—Ä–æ–∫: " .. playerText)
    
    -- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ AI —á–µ—Ä–µ–∑ event bus
    local aiResponse = sendEventToAI("dialogue_request", {
        player_message = playerText,
        npc_name = npcName,
        context = "morrowind_dialogue"
    })
    
    if aiResponse then
        print("[AI] ‚úÖ –î–∏–∞–ª–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∞–Ω AI!")
        return aiResponse
    else
        return "–ò–∑–≤–∏–Ω–∏, –ò–ò —Å–µ–π—á–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    end
end

-- –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞
local function processVoiceInput()
    print("[AI] üé§ –û–ë–†–ê–ë–ê–¢–´–í–ê–Æ –ì–û–õ–û–°–û–í–û–ô –í–í–û–î!")
    
    -- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –Ω–∞—á–∞–ª–∞ –∑–∞–ø–∏—Å–∏ –≤ AI
    sendEventToAI("voice_start", {
        language = "ru",
        model = "vosk-model-small-ru-0.22"
    })
    
    -- TODO: –†–µ–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É–¥–∏–æ
    print("[AI] üìù –ò–º–∏—Ç–∏—Ä—É—é —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏...")
    local recognizedText = "–¢–µ—Å—Ç –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã"
    
    -- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ AI
    local aiResponse = sendEventToAI("voice_text", {
        recognized_text = recognizedText
    })
    
    print("[AI] ‚úÖ –ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!")
    return aiResponse
end

-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
local function runAITests()
    print("[AI] üß™ –ó–ê–ü–£–°–ö–ê–Æ –ü–û–õ–ù–´–ï –¢–ï–°–¢–´ AI –°–ò–°–¢–ï–ú–´...")
    
    -- –¢–µ—Å—Ç 1: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É
    print("[AI] üîó –¢–µ—Å—Ç 1: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ AI-—Å–µ—Ä–≤–µ—Ä—É")
    if connectToAIServer() then
        print("[AI] ‚úÖ –¢–µ—Å—Ç 1 –ø—Ä–æ–π–¥–µ–Ω - AI-—Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
    else
        print("[AI] ‚ùå –¢–µ—Å—Ç 1 –ø—Ä–æ–≤–∞–ª–µ–Ω - –Ω–µ—Ç —Å–≤—è–∑–∏ —Å AI")
        return false
    end
    
    -- –¢–µ—Å—Ç 2: –î–∏–∞–ª–æ–≥ —Å AI
    print("[AI] üí¨ –¢–µ—Å—Ç 2: –î–∏–∞–ª–æ–≥ —Å AI")
    local dialogueResult = processDialogue("–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?", "–¢–µ—Å—Ç–æ–≤—ã–π –ù–ü–°")
    if dialogueResult then
        print("[AI] ‚úÖ –¢–µ—Å—Ç 2 –ø—Ä–æ–π–¥–µ–Ω - –¥–∏–∞–ª–æ–≥–∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
    else
        print("[AI] ‚ùå –¢–µ—Å—Ç 2 –ø—Ä–æ–≤–∞–ª–µ–Ω - –¥–∏–∞–ª–æ–≥–∏ –Ω–µ –æ—Ç–≤–µ—á–∞—é—Ç")
    end
    
    -- –¢–µ—Å—Ç 3: –ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥  
    print("[AI] üé§ –¢–µ—Å—Ç 3: –ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥")
    local voiceResult = processVoiceInput()
    if voiceResult then
        print("[AI] ‚úÖ –¢–µ—Å—Ç 3 –ø—Ä–æ–π–¥–µ–Ω - –≥–æ–ª–æ—Å —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else
        print("[AI] ‚ùå –¢–µ—Å—Ç 3 –ø—Ä–æ–≤–∞–ª–µ–Ω - –ø—Ä–æ–±–ª–µ–º—ã —Å –≥–æ–ª–æ—Å–æ–º")
    end
    
    print("[AI] üéØ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´!")
    return true
end

-- –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
local function onInit()
    print("[AI] üöÄ –ü–û–õ–ù–û–¶–ï–ù–ù–´–ô AI –ú–û–î –ò–ù–ò–¶–ò–ê–õ–ò–ó–ò–†–£–ï–¢–°–Ø!")
    print("[AI] üéÆ OpenMW –≤–µ—Ä—Å–∏—è: 0.49.0")
    print("[AI] ü§ñ AI-—Å–µ—Ä–≤–µ—Ä: " .. AI_EVENT_BUS_HOST .. ":" .. AI_EVENT_BUS_PORT)
    print("[AI] üåê HTTP –º–æ—Å—Ç: " .. HTTP_BRIDGE_URL)
    
    -- –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º AI —Å–∏—Å—Ç–µ–º—É
    aiActive = true
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    if runAITests() then
        print("[AI] üéâ AI –ú–û–î –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï!")
        print("[AI] ‚úÖ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("[AI] üöÄ –ì–æ—Ç–æ–≤ –∫ —Ä–µ–∞–ª—å–Ω—ã–º –¥–∏–∞–ª–æ–≥–∞–º —Å Gemini AI!")
    else
        print("[AI] ‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏, –Ω–æ —Å–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–∞")
    end
    
    print("[AI] üìà –°–õ–ï–î–£–Æ–©–ò–ô –≠–¢–ê–ü: —Ä–µ–∞–ª—å–Ω–æ–µ TCP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ AI-—Å–µ—Ä–≤–µ—Ä—É")
end

-- –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è OpenMW
return {
    engineHandlers = {
        onInit = onInit
    }
}
